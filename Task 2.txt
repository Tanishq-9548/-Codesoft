#include <iostream>
#include <vector>
#include <string>
using namespace std;
struct Task {
    string name;
    bool completed;
};

void addTask(vector<Task>& tasks, string taskName) {
    tasks.push_back({taskName, false});
    cout << "✅ Task added: " << taskName << endl;
}

void viewTasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "📂 No tasks in the list." << endl;
    } else {
        cout << "\n📋 To-Do List:" << endl;
        for (size_t i = 0; i < tasks.size(); i++) {
            cout << i + 1 << ". " << tasks[i].name 
                 << " - " << (tasks[i].completed ? "✅ Completed" : "Pending") << endl;
        }
    }
    cout << endl;
}

void markTaskCompleted(vector<Task>& tasks, int taskNumber) {
    if (taskNumber > 0 && taskNumber <= (int)tasks.size()) {
        tasks[taskNumber - 1].completed = true;
        cout << "✅ Task " << taskNumber << " marked as completed." << endl;
    } else {
        cout << "❌ Invalid task number." << endl;
    }
}

void removeTask(vector<Task>& tasks, int taskNumber) {
    if (taskNumber > 0 && taskNumber <= (int)tasks.size()) {
        cout << "🗑️ Removed task: " << tasks[taskNumber - 1].name << endl;
        tasks.erase(tasks.begin() + taskNumber - 1);
    } else {
        cout << "❌ Invalid task number." << endl;
    }
}

int main() {
    vector<Task> tasks;
    int choice;

    while (true) {
        cout << "\n=== TO-DO LIST MANAGER ===" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Remove Task" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice (1-5): ";
        cin >> choice;
        cin.ignore();

        if (choice == 1) {
            string taskName;
            cout << "Enter the task: ";
            getline(cin, taskName);
            addTask(tasks, taskName);
        } 
        else if (choice == 2) {
            viewTasks(tasks);
        } 
        else if (choice == 3) {
            viewTasks(tasks);
            int num;
            cout << "Enter task number to mark as completed: ";
            cin >> num;
            markTaskCompleted(tasks, num);
        } 
        else if (choice == 4) {
            viewTasks(tasks);
            int num;
            cout << "Enter task number to remove: ";
            cin >> num;
            removeTask(tasks, num);
        } 
        else if (choice == 5) {
            cout << "👋 Goodbye!" << endl;
            break;
        } 
        else {
            cout << "❌ Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
